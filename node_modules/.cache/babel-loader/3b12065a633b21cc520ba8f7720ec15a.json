{"ast":null,"code":"var _jsxFileName = \"/home/apeksha/intern/src/components/PlayVideo.js\";\nimport React from 'react';\nimport './PlayVideo.css';\nimport ReactPlayer from 'react-player';\n\nclass PlayVideo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoitems: this.props.location\n    }; // this.setState({\n    //     arrangeitems:this.props.location\n    //   })\n  }\n\n  onPlay(e) {\n    // Determine which player the event is coming from\n    var id = e.target.id; // Loop through the array of players\n\n    for (var i = 0; i < players.length; i++) {\n      // Get the player(s) that did not trigger the play event\n      if (players[i].id() != id) {\n        // Pause the other player(s)\n        videojs(players[i].id()).pause();\n      }\n    }\n  }\n\n  render() {\n    console.log(\"playyyyyyvideooo\");\n    console.log(this.props.location);\n    const {\n      items\n    } = this.state.videoitems;\n    console.log(items);\n\n    if (items) {\n      const listItems = items.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"videos\",\n          key: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          id: item.key,\n          url: item.text,\n          controls: \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        })));\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }, listItems));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"your videos\"));\n  }\n\n}\n\nexport default PlayVideo;","map":{"version":3,"sources":["/home/apeksha/intern/src/components/PlayVideo.js"],"names":["React","ReactPlayer","PlayVideo","Component","constructor","props","state","videoitems","location","onPlay","e","id","target","i","players","length","videojs","pause","render","console","log","items","listItems","map","item","key","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AACA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAC,KAAKF,KAAL,CAAWG;AADf,KAAX,CAFJ,CAKI;AACA;AAEA;AACH;;AACAC,EAAAA,MAAM,CAACC,CAAD,EAAI;AACP;AACA,QAAIC,EAAE,GAAGD,CAAC,CAACE,MAAF,CAASD,EAAlB,CAFO,CAGP;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,OAAO,CAACC,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvC;AACA,UAAIC,OAAO,CAACD,CAAD,CAAP,CAAWF,EAAX,MAAmBA,EAAvB,EAA2B;AACzB;AACAK,QAAAA,OAAO,CAACF,OAAO,CAACD,CAAD,CAAP,CAAWF,EAAX,EAAD,CAAP,CAAyBM,KAAzB;AACD;AACF;AACJ;;AACDC,EAAAA,MAAM,GAAE;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWG,QAAvB;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAY,KAAKf,KAAL,CAAWC,UAA7B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,QAAIA,KAAJ,EAAW;AAEP,YAAMC,SAAS,GAACD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI;AAC9B,4BAAO;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEA,oBAAC,WAAD;AAAa,UAAA,EAAE,EAAED,IAAI,CAACC,GAAtB;AAA2B,UAAA,GAAG,EAAED,IAAI,CAACE,IAArC;AAA2C,UAAA,QAAQ,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CADG,CAAP;AAQH,OATe,CAAhB;AAUA,0BACI,uDACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMJ,SAAN,CADD,CADJ;AAKH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAQC;;AAvDL;;AA8DA,eAAepB,SAAf","sourcesContent":["import React from 'react'\nimport './PlayVideo.css'\nimport ReactPlayer from 'react-player';\nclass PlayVideo extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            videoitems:this.props.location\n        }\n        // this.setState({\n        //     arrangeitems:this.props.location\n            \n        //   })\n    }\n     onPlay(e) {\n        // Determine which player the event is coming from\n        var id = e.target.id;\n        // Loop through the array of players\n        for (var i = 0; i < players.length; i++) {\n          // Get the player(s) that did not trigger the play event\n          if (players[i].id() != id) {\n            // Pause the other player(s)\n            videojs(players[i].id()).pause();\n          }\n        }\n    }\n    render(){\n    console.log(\"playyyyyyvideooo\")\n    console.log(this.props.location);\n    const { items } = this.state.videoitems;\n    console.log(items);\n    if (items) {\n              \n        const listItems=items.map(item => {\n            return <div className=\"videos\" key={item.key}>\n                <p>\n               \n                <ReactPlayer id={item.key} url={item.text} controls=\"true\"\n                ></ReactPlayer>\n                </p>\n                \n            </div>\n        })\n        return(\n            <>\n             <div>{listItems}</div>\n            </>\n        )\n    }\n    return (\n        <div>\n            <h1>your videos</h1>\n            {/* <iframe width=\"420\" height=\"345\" src=\"https://www.youtube.com/embed/tgbNymZ7vqY\">\n            </iframe> */}\n        </div>\n    )\n\n    }\n    \n    \n}\n\n\n\nexport default PlayVideo\n"]},"metadata":{},"sourceType":"module"}