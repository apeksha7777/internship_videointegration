{"ast":null,"code":"var _jsxFileName = \"/home/apeksha/intern/src/components/PlayVideo.js\";\nimport React from 'react';\nimport './PlayVideo.css';\nimport ReactPlayer from 'react-player';\n\nclass PlayVideo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoitems: this.props.location,\n      videoids: []\n    }; // this.setState({\n    //     arrangeitems:this.props.location\n    //   })\n  } //  onPlay(e) {\n  //     // Determine which player the event is coming from\n  //     var id = e.target.id;\n  //     // Loop through the array of players\n  //     for (var i = 0; i < players.length; i++) {\n  //       // Get the player(s) that did not trigger the play event\n  //       if (players[i].id() != id) {\n  //         // Pause the other player(s)\n  //         videojs(players[i].id()).pause();\n  //       }\n  //     }\n  // }\n\n\n  onplay(key) {\n    console.log(\"startedddd\");\n    console.log(key);\n    const {\n      vid\n    } = this.state.videoitems;\n\n    if (vid) {\n      const listItems = vid.map(item => {\n        if (item.key != id) {\n          // Pause the other player(s)\n          videojs(players[i].id()).pause();\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"videos\",\n          key: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          id: item.key,\n          onStart: this.onplay(item.key),\n          url: item.text,\n          controls: \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        })));\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }\n      }, listItems));\n    }\n  }\n\n  render() {\n    const {\n      items\n    } = this.state.videoitems;\n    console.log(items);\n\n    if (items) {\n      const listItems = items.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"videos\",\n          key: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ReactPlayer, {\n          id: item.key,\n          onStart: this.onplay(item.key),\n          url: item.text,\n          controls: \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        })));\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }\n      }, listItems));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"your videos\"));\n  }\n\n}\n\nexport default PlayVideo;","map":{"version":3,"sources":["/home/apeksha/intern/src/components/PlayVideo.js"],"names":["React","ReactPlayer","PlayVideo","Component","constructor","props","state","videoitems","location","videoids","onplay","key","console","log","vid","listItems","map","item","id","videojs","players","i","pause","text","render","items"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './PlayVideo.css'\nimport ReactPlayer from 'react-player';\nclass PlayVideo extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            videoitems:this.props.location,\n            videoids:[]\n        }\n        // this.setState({\n        //     arrangeitems:this.props.location\n            \n        //   })\n    }\n    //  onPlay(e) {\n    //     // Determine which player the event is coming from\n    //     var id = e.target.id;\n    //     // Loop through the array of players\n    //     for (var i = 0; i < players.length; i++) {\n    //       // Get the player(s) that did not trigger the play event\n    //       if (players[i].id() != id) {\n    //         // Pause the other player(s)\n    //         videojs(players[i].id()).pause();\n    //       }\n    //     }\n    // }\n    onplay(key)\n    {\n        console.log(\"startedddd\");\n        console.log(key);\n        const { vid } = this.state.videoitems;\n        if (vid) {\n              \n            const listItems=vid.map(item => {\n                if (item.key != id) {\n                            // Pause the other player(s)\n                            videojs(players[i].id()).pause();\n                          }\n                return <div className=\"videos\" key={item.key}>\n                    <p>\n                  \n                    <ReactPlayer id={item.key} onStart={this.onplay(item.key)} url={item.text} controls=\"true\"\n                    ></ReactPlayer>\n                    </p>\n                    \n                </div>\n            })\n            return(\n                <>\n                 <div>{listItems}</div>\n                </>\n            )\n        }\n\n    }\n    render(){\n    const { items } = this.state.videoitems;\n    console.log(items);\n    if (items) {\n              \n        const listItems=items.map(item => {\n           \n            return <div className=\"videos\" key={item.key}>\n                <p>\n              \n                <ReactPlayer id={item.key} onStart={this.onplay(item.key)} url={item.text} controls=\"true\"\n                ></ReactPlayer>\n                </p>\n                \n            </div>\n        })\n        return(\n            <>\n             <div>{listItems}</div>\n            </>\n        )\n    }\n    return (\n        <div>\n            <h1>your videos</h1>\n        </div>\n    )\n\n    }\n    \n    \n}\n\n\n\nexport default PlayVideo\n"]},"metadata":{},"sourceType":"module"}