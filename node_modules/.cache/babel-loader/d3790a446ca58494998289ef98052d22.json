{"ast":null,"code":"var _jsxFileName = \"/home/apeksha/intern/src/components/Arrange.js\";\nimport React from 'react';\nimport AddLink from './AddLink';\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst getItems = count => Array.from({\n  length: count\n}, (v, k) => k).map(k => ({\n  id: `item-${k}`,\n  content: `item ${k}`\n})); // a little function to help us with reordering the result\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n}; // using some little inline style helpers to make the app look okay\n\n\nconst grid = 8;\n\nconst getItemStyle = (draggableStyle, isDragging) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid * 2,\n  marginBottom: grid,\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'grey',\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  padding: grid,\n  width: 250\n});\n\nclass Arrange extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: getItems(10)\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(this.state.items, result.source.index, result.destination.index);\n    this.setState({\n      items\n    });\n  } // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, this.state.items.map(item => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef,\n      style: getItemStyle(provided.draggableStyle, snapshot.isDragging)\n    }, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 27\n      }\n    }), item.content), provided.placeholder))))));\n  }\n\n} // function Arrange(props) {\n//     const {items}=props.location.state;\n//    // console.log(data);\n//     // const items=props.itemsarr;\n//     if (items) {\n//        // console.log(items);\n//         const listItems=items.map(item => {\n//             return <div className=\"list\" key={item.key}>\n//                 <p>{item.text}\n//                 </p>\n//             </div>\n//         })\n//         return(\n//             <div>{listItems}</div>\n//         )\n//     }\n//     return(\n//         <div>\n//             <h1>rearrage</h1>\n//             <Link to=\"/PlayVideo\">\n//            <Button renderAs=\"button\">\n//            <span>next</span>\n//            </Button>  </Link>\n//         </div>\n//     )\n// }\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));\nexport default Arrange;","map":{"version":3,"sources":["/home/apeksha/intern/src/components/Arrange.js"],"names":["React","AddLink","BrowserRouter","Router","Switch","Link","Route","Button","DragDropContext","Droppable","Draggable","getItems","count","Array","from","length","v","k","map","id","content","reorder","list","startIndex","endIndex","result","removed","splice","grid","getItemStyle","draggableStyle","isDragging","userSelect","padding","marginBottom","background","getListStyle","isDraggingOver","width","Arrange","Component","constructor","props","state","items","onDragEnd","bind","destination","source","index","setState","render","provided","snapshot","innerRef","item","dragHandleProps","placeholder","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AddLink from './AddLink';\nimport{BrowserRouter as Router,Switch,Link,Route} from 'react-router-dom'\nimport { Button} from 'react-bootstrap';\nimport { DragDropContext,Droppable,Draggable } from 'react-beautiful-dnd';\n\n\nconst getItems = count =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `item-${k}`,\n    content: `item ${k}`,\n  }));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n// using some little inline style helpers to make the app look okay\nconst grid = 8;\nconst getItemStyle = (draggableStyle, isDragging) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid * 2,\n  marginBottom: grid,\n\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'grey',\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  padding: grid,\n  width: 250,\n});\nclass Arrange extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n          items: getItems(10),\n        };\n        this.onDragEnd = this.onDragEnd.bind(this);\n      }\n    \n      onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n          return;\n        }\n    \n        const items = reorder(\n          this.state.items,\n          result.source.index,\n          result.destination.index\n        );\n    \n        this.setState({\n          items,\n        });\n      }\n    \n      // Normally you would want to split things out into separate components.\n      // But in this example everything is just done in one place for simplicity\n      render() {\n        return (\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  {this.state.items.map(item => (\n                    <Draggable key={item.id} draggableId={item.id}>\n                      {(provided, snapshot) => (\n                        <div>\n                          <div\n                            ref={provided.innerRef}\n                            style={getItemStyle(\n                              provided.draggableStyle,\n                              snapshot.isDragging\n                            )}\n                            {...provided.dragHandleProps}\n                          >\n                            {item.content}\n                          </div>\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        );\n      }\n}\n// function Arrange(props) {\n//     const {items}=props.location.state;\n//    // console.log(data);\n//     // const items=props.itemsarr;\n//     if (items) {\n//        // console.log(items);\n//         const listItems=items.map(item => {\n//             return <div className=\"list\" key={item.key}>\n//                 <p>{item.text}\n//                 </p>\n                \n//             </div>\n//         })\n//         return(\n//             <div>{listItems}</div>\n//         )\n\n//     }\n//     return(\n//         <div>\n//             <h1>rearrage</h1>\n//             <Link to=\"/PlayVideo\">\n//            <Button renderAs=\"button\">\n//            <span>next</span>\n//            </Button>  </Link>\n//         </div>\n//     )\n   \n// }\n\n\nReactDOM.render(<App />, document.getElementById('app'));\nexport default Arrange\n"]},"metadata":{},"sourceType":"module"}