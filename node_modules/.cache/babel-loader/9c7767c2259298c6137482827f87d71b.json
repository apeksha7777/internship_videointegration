{"ast":null,"code":"var _jsxFileName = \"/home/apeksha/intern/src/components/Arrange.js\";\nimport React from 'react';\nimport AddLink from './AddLink';\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nconst getItems = count => Array.from({\n  length: count\n}, (v, k) => k).map(k => ({\n  id: `item-${k}`,\n  content: `item ${k}`\n})); // a little function to help us with reordering the result\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n}; // using some little inline style helpers to make the app look okay\n\n\nconst grid = 8;\n\nconst getItemStyle = (draggableStyle, isDragging) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid * 2,\n  marginBottom: grid,\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'grey',\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  padding: grid,\n  width: 250\n});\n\nclass Arrange extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialDnDState = {\n      draggedFrom: null,\n      draggedTo: null,\n      isDragging: false,\n      originalOrder: [],\n      updatedOrder: []\n    };\n    this.state = {\n      arrangeitems: this.props.location\n    };\n  }\n\n  // onDragEnd = result => {\n  //     const { destination, source, reason } = result;\n  //     // Not a thing to do...\n  //     if (!destination || reason === 'CANCEL') {\n  //       return;\n  //     }\n  //     if (\n  //       destination.droppableId === source.droppableId &&\n  //       destination.index === source.index\n  //     ) {\n  //       return;\n  //     }\n  //     const arrangeitems = Object.assign([], this.state.arrangeitems);\n  //     const droppedUser = this.state.arrangeitems[source.index];\n  //     arrangeitems.splice(source.index, 1);\n  //     arrangeitems.splice(destination.index, 0, droppedUser);\n  //     this.setState({\n  //         arrangeitems\n  //     });\n  //   }\n  //  handleDragStart(e) {\n  //     this.style.opacity = '0.4';\n  //     dragSrcEl = this;\n  //     e.dataTransfer.effectAllowed = 'move';\n  //     e.dataTransfer.setData('text/html', this.innerHTML);\n  //   }\n  //    handleDrop(e) {\n  //     e.stopPropagation();\n  //       if (dragSrcEl !== this) {\n  //         dragSrcEl.innerHTML = this.innerHTML;\n  //         this.innerHTML = e.dataTransfer.getData('text/html');\n  //       }\n  //       return false;\n  //     }\n  render() {\n    const {\n      items\n    } = this.state.arrangeitems;\n    console.log(items);\n\n    if (items) {\n      // console.log(items);\n      const listItems = items.map(item => {\n        return /*#__PURE__*/React.createElement(DragDropContext, {\n          onDragEnd: this.onDragEnd,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Droppable, {\n          droppableId: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }\n        }, provided => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"list\",\n          key: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          draggable: \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fas fa-arrows-alt\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 34\n          }\n        }), item.text))));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, listItems);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n} // function Arrange(props) {\n//     const {items}=props.location.state;\n//    // console.log(data);\n//     // const items=props.itemsarr;\n//     if (items) {\n//        // console.log(items);\n//         const listItems=items.map(item => {\n//             return <div className=\"list\" key={item.key}>\n//                 <p>{item.text}\n//                 </p>\n//             </div>\n//         })\n//         return(\n//             <div>{listItems}</div>\n//         )\n//     }\n//     return(\n//         <div>\n//             <h1>rearrage</h1>\n//             <Link to=\"/PlayVideo\">\n//            <Button renderAs=\"button\">\n//            <span>next</span>\n//            </Button>  </Link>\n//         </div>\n//     )\n// }\n\n\nexport default Arrange;","map":{"version":3,"sources":["/home/apeksha/intern/src/components/Arrange.js"],"names":["React","AddLink","BrowserRouter","Router","Switch","Link","Route","Button","DragDropContext","Droppable","getItems","count","Array","from","length","v","k","map","id","content","reorder","list","startIndex","endIndex","result","removed","splice","grid","getItemStyle","draggableStyle","isDragging","userSelect","padding","marginBottom","background","getListStyle","isDraggingOver","width","Arrange","Component","constructor","props","initialDnDState","draggedFrom","draggedTo","originalOrder","updatedOrder","state","arrangeitems","location","render","items","console","log","listItems","item","onDragEnd","key","provided","text"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AddLink from './AddLink';\nimport{BrowserRouter as Router,Switch,Link,Route} from 'react-router-dom'\nimport { Button} from 'react-bootstrap';\nimport { DragDropContext,Droppable } from 'react-beautiful-dnd';\n\n\nconst getItems = count =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `item-${k}`,\n    content: `item ${k}`,\n  }));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n// using some little inline style helpers to make the app look okay\nconst grid = 8;\nconst getItemStyle = (draggableStyle, isDragging) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid * 2,\n  marginBottom: grid,\n\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'grey',\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  padding: grid,\n  width: 250,\n});\nclass Arrange extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            arrangeitems:this.props.location,\n             }\n    }\n     initialDnDState = {\n        draggedFrom: null,\n        draggedTo: null,\n        isDragging: false,\n        originalOrder: [],\n        updatedOrder: []\n       }\n    \n    // onDragEnd = result => {\n    //     const { destination, source, reason } = result;\n    //     // Not a thing to do...\n    //     if (!destination || reason === 'CANCEL') {\n    //       return;\n    //     }\n    \n    //     if (\n    //       destination.droppableId === source.droppableId &&\n    //       destination.index === source.index\n    //     ) {\n    //       return;\n    //     }\n    \n    //     const arrangeitems = Object.assign([], this.state.arrangeitems);\n    //     const droppedUser = this.state.arrangeitems[source.index];\n\n\n    //     arrangeitems.splice(source.index, 1);\n    //     arrangeitems.splice(destination.index, 0, droppedUser);\n    //     this.setState({\n    //         arrangeitems\n    //     });\n    //   }\n    //  handleDragStart(e) {\n    //     this.style.opacity = '0.4';\n    \n    //     dragSrcEl = this;\n    \n    //     e.dataTransfer.effectAllowed = 'move';\n    //     e.dataTransfer.setData('text/html', this.innerHTML);\n    //   }\n    //    handleDrop(e) {\n    //     e.stopPropagation();\n      \n    //       if (dragSrcEl !== this) {\n    //         dragSrcEl.innerHTML = this.innerHTML;\n    //         this.innerHTML = e.dataTransfer.getData('text/html');\n    //       }\n      \n    //       return false;\n    //     }\nrender(){\n    const { items } = this.state.arrangeitems\n    console.log(items);\n    \n    if (items) {\n               // console.log(items);\n               \n                const listItems=items.map(item => {\n                    return (\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId={item.key}>\n                            { provided=>(\n                               \n                                <div \n                                 className=\"list\" key={item.key}>\n                                 <p draggable=\"true\">\n                                 <i class=\"fas fa-arrows-alt\"></i>\n                                 {item.text}\n                                 </p>\n                                 </div>\n                               \n                                \n                                 )\n\n                            }\n                       \n                         </Droppable>\n                         </DragDropContext>\n                    )\n                })\n                return(\n                    <div>{listItems}</div>\n                )\n              \n        \n            }\n    return(\n        <>\n       \n\n        </>\n\n    )\n}\n}\n// function Arrange(props) {\n//     const {items}=props.location.state;\n//    // console.log(data);\n//     // const items=props.itemsarr;\n//     if (items) {\n//        // console.log(items);\n//         const listItems=items.map(item => {\n//             return <div className=\"list\" key={item.key}>\n//                 <p>{item.text}\n//                 </p>\n                \n//             </div>\n//         })\n//         return(\n//             <div>{listItems}</div>\n//         )\n\n//     }\n//     return(\n//         <div>\n//             <h1>rearrage</h1>\n//             <Link to=\"/PlayVideo\">\n//            <Button renderAs=\"button\">\n//            <span>next</span>\n//            </Button>  </Link>\n//         </div>\n//     )\n   \n// }\n\n\n\nexport default Arrange\n"]},"metadata":{},"sourceType":"module"}