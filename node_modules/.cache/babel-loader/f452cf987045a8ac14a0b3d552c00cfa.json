{"ast":null,"code":"var _jsxFileName = \"/home/apeksha/intern/src/components/Arrange.js\";\nimport React from 'react';\nimport AddLink from './AddLink';\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Arrange.css';\n\nclass Arrange extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        reason\n      } = result; // Not a thing to do...\n\n      if (!destination || reason === 'CANCEL') {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const users = Object.assign([], this.state.users);\n      const droppedUser = this.state.users[source.index];\n      users.splice(source.index, 1);\n      users.splice(destination.index, 0, droppedUser);\n      this.setState({\n        users\n      });\n    };\n\n    this.renderUsers = (item, index) => {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        key: index,\n        draggableId: index + ' ',\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, index + 1), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, item.t), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, item.lastName)))));\n    };\n\n    this.state = {\n      users: this.props.location\n    };\n  }\n\n  render() {\n    const {\n      items\n    } = this.state.arrangeitems;\n    console.log(\"arannnnnnndee\");\n    console.log(items);\n\n    if (items) {\n      const listItems = items.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"list\",\n          key: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          id: \"arrangeL\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fas fa-arrows-alt\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }\n        }), \" \", item.text));\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        id: \"reorderh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, \"Reorder the List \"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 22\n        }\n      }, listItems), /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: \"/PlayVideo\",\n          items: items\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: \"arrangebutton\",\n        renderAs: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \"Next\")), \"  \"));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n} // function Arrange(props) {\n//     const {items}=props.location.state;\n//    // console.log(data);\n//     // const items=props.itemsarr;\n//     if (items) {\n//        // console.log(items);\n//         const listItems=items.map(item => {\n//             return <div className=\"list\" key={item.key}>\n//                 <p>{item.text}\n//                 </p>\n//             </div>\n//         })\n//         return(\n//             <div>{listItems}</div>\n//         )\n//     }\n//     return(\n//         <div>\n//             <h1>rearrage</h1>\n//             <Link to=\"/PlayVideo\">\n//            <Button renderAs=\"button\">\n//            <span>next</span>\n//            </Button>  </Link>\n//         </div>\n//     )\n// }\n\n\nexport default Arrange;","map":{"version":3,"sources":["/home/apeksha/intern/src/components/Arrange.js"],"names":["React","AddLink","BrowserRouter","Router","Switch","Link","Route","Button","DragDropContext","Droppable","Draggable","Arrange","Component","constructor","props","onDragEnd","result","destination","source","reason","droppableId","index","users","Object","assign","state","droppedUser","splice","setState","renderUsers","item","provided","innerRef","draggableProps","dragHandleProps","t","lastName","location","render","items","arrangeitems","console","log","listItems","map","key","text","pathname"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AddLink from './AddLink';\nimport{BrowserRouter as Router,Switch,Link,Route} from 'react-router-dom'\nimport { Button} from 'react-bootstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Arrange.css';\nclass Arrange extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            users:this.props.location\n        }\n       \n    }\n    onDragEnd = result => {\n        const { destination, source, reason } = result;\n        // Not a thing to do...\n        if (!destination || reason === 'CANCEL') {\n          return;\n        }\n    \n        if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n        ) {\n          return;\n        }\n    \n        const users = Object.assign([], this.state.users);\n        const droppedUser = this.state.users[source.index];\n\n\n        users.splice(source.index, 1);\n        users.splice(destination.index, 0, droppedUser);\n        this.setState({\n          users\n        });\n      }\n\n      renderUsers = (item, index) => {\n        return <Draggable\n            key={index}\n            draggableId={index+' '}\n            index={index}>\n\n            {(provided) => (\n                <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                >\n                    <div className='item'>\n                        <div>{index+1}</div>\n                       \n                        <div className='name'>\n                            <div>{item.t}</div>\n                            <div>{item.lastName}</div>\n                        </div>\n\n                    </div>\n                </div>\n            )}\n\n\n\n        </Draggable>\n    }\n   \nrender(){\n    \n    const { items } = this.state.arrangeitems\n    console.log(\"arannnnnnndee\")\n    console.log(items);\n   \n    if (items) {\n              \n                const listItems=items.map(item => {\n                    return <div className=\"list\" key={item.key}>\n                        <p id=\"arrangeL\">\n                        <i class=\"fas fa-arrows-alt\"></i> {item.text}\n                       \n                        </p>\n                        \n                    </div>\n                })\n                return(\n                    <>\n                    <h1 id=\"reorderh\">Reorder the List </h1> \n                     <div>{listItems}</div>\n                    <Link to={{\n                        pathname: \"/PlayVideo\",\n                        items: items\n\n                     }}\n                    >\n                    <Button id=\"arrangebutton\" renderAs=\"button\">\n                    <span>Next</span>\n                    </Button>  </Link>\n                      \n\n                    </>\n                   \n                )\n        \n            }\n           \n    return(\n        <>\n                      \n\n        </>\n\n    )\n}\n}\n// function Arrange(props) {\n//     const {items}=props.location.state;\n//    // console.log(data);\n//     // const items=props.itemsarr;\n//     if (items) {\n//        // console.log(items);\n//         const listItems=items.map(item => {\n//             return <div className=\"list\" key={item.key}>\n//                 <p>{item.text}\n//                 </p>\n                \n//             </div>\n//         })\n//         return(\n//             <div>{listItems}</div>\n//         )\n\n//     }\n//     return(\n//         <div>\n//             <h1>rearrage</h1>\n//             <Link to=\"/PlayVideo\">\n//            <Button renderAs=\"button\">\n//            <span>next</span>\n//            </Button>  </Link>\n//         </div>\n//     )\n   \n// }\n\n\n\nexport default Arrange\n"]},"metadata":{},"sourceType":"module"}